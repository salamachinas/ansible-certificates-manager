---
- name: "ensures {{ location }} dir exists"
  file:
    path: '{{ location }}'
    state: directory
    owner: '{{ location_owner }}'
    group: '{{ location_group }}'
    mode: '{{ location_mode }}'

- name: "ensures {{ item.custom_location }} dir exists"
  file:
    path: '{{ item.custom_location }}'
    state: directory
    owner: '{{ location_owner }}'
    group: '{{ location_group }}'
    mode: '{{ location_mode }}'
  with_items: '{{ certificates }}'
  when: item.custom_location is defined

- name: "ensures {{ item.custom_location }} dir exists"
  file:
    path: '{{ item.custom_location }}'
    state: directory
    owner: '{{ location_owner }}'
    group: '{{ location_group }}'
    mode: '{{ location_mode }}'
  with_items: '{{ client_certificates }}'
  when: item.custom_location is defined

- name: make sure certificate is installed
  copy:
    content: '{{ item.certificate | b64decode }}'
    dest: "{{ item.custom_location | default(location) }}/{{item.name}}.{{ item.custom_extension | default('cert')}}"
    owner: '{{ certificate_owner }}'
    group: '{{ certificate_group }}'
    mode: '{{ certificate_mode }}'
  with_items: '{{ certificates }}'
  no_log: true

- name: make sure key is installed
  copy:
    content: '{{ item.key | b64decode }}'
    dest: "{{ location }}/{{item.name}}.key"
    owner: '{{ key_owner }}'
    group: '{{ key_group }}'
    mode: '{{ key_mode }}'
  with_items: '{{ certificates }}'
  when: item.key is defined
  no_log: true

- name: make sure client certificate is installed
  copy:
    content: '{{ item.client_certificate | b64decode }}'
    dest: "{{ item.custom_location | default(location) }}/{{item.name}}.{{item.custom_extension | default('cert')}}"
    owner: '{{ certificate_owner }}'
    group: '{{ certificate_group }}'
    mode: '{{ certificate_mode }}'
  with_items: '{{ client_certificates }}'
  no_log: true
